// =======================================
// BLOQUE 1: Variables para cálculo de meses y coste estimado
// Regla: Se paga hasta el 30 de noviembre del año actual.
// En diciembre, se cuenta hasta noviembre del año siguiente (11 meses).
// =======================================

Set(varMesActual, Month(Today()));
Set(varAnioActual, Year(Today()));

If(
    varMesActual = 12,
    Set(varMesesEstimados, 11), // Diciembre → hasta noviembre del próximo año
    Set(varMesesEstimados, 11 - varMesActual + 1) // Incluye el mes actual
);

Set(varCosteEstimado, varMesesEstimados * AppDatos.Importe);


// =======================================
// BLOQUE 2: Validación de campos obligatorios
// Si falta algún dato, se notifica al usuario y se detiene el proceso.
// =======================================

Set(varEstaVacioMyPeople, CountRows(MyPeople) = 0);
Set(varEstaVacioMyPeopleManager, CountRows(MyPeopleManager) = 0);

If(
    varEstaVacioMyPeopleManager || IsBlank(cmbEntidad) || IsBlank(tiCECO.Value) || IsBlank(tiProducto.Value) || varEstaVacioMyPeople,
    
    Notify("Completa todos los campos obligatorios antes de continuar.", NotificationType.Error),

    // =======================================
    // BLOQUE 3: Asignación de variables de usuario actual y aprobador
    // =======================================
    
    Set(varManagerNombre, First(MyPeopleManager).DisplayName);
    Set(varManagerID, First(MyPeopleManager).MailNickname);
    Set(varPeticionarioID, currentUser.mailNickname);
    
    // =======================================
    // BLOQUE 4: Crear registro para cada beneficiario
    // =======================================

    ForAll(
        MyPeople,
        Patch(
            sng_solicitudes,
            Defaults(sng_solicitudes),
            {
                // Datos de peticionario y beneficiario
                sng_solicitudPeticionarioEmail: currentUser.userPrincipalName,
                sng_solicitudBeneficiarioEmail: UserPrincipalName,
                sng_solicitudAprobador1Email: tiMostrarManager.Value,

                sng_solicitudPeticionarioID: varPeticionarioID,
                sng_solicitudBeneficiarioID: MailNickname,
                sng_solicitudAprobador1ID: varManagerID,

                sng_solicitudPeticionarioNombre: currentUser.displayName,
                sng_solicitudBeneficiarioNombre: DisplayName,
                sng_solicitudAprobador1Nombre: varManagerNombre,

                // Datos del formulario
                sng_solicitudEntidad: cmbEntidad.Selected.sng_entidadClienteID,
                sng_solicitudCECO: tiCECO.Value,
                sng_solicitudProducto: tiProducto.Value,

                // Nuevas columnas: cálculo estimado
                sng_solicitudMesesEstimados: varMesesEstimados,
                sng_solicitudCosteEstimado: varCosteEstimado, 
                sng_solicitudCosteMensual: AppDatos.Importe,

                // Metadatos
                sng_solicitudEstado: AppEstados.PendienteAprobador1,
                sng_solicitudFecha: Now()
            }
        )
    );

    // =======================================
    // BLOQUE 5: Post-envío – limpiar controles y navegar
    // =======================================

    Notify("Envío correcto. La solicitud ha sido registrada.", NotificationType.Success);
    Clear(MyPeople);
    Clear(MyPeopleManager);
    Reset(tiMostrarManager);
    Reset(tiCECO);
    Reset(tiProducto);
    Reset(cmbEntidad);
    Navigate(Scr_User)
);

// =======================================
// BLOQUE 6: Actualizar galería de solicitudes
// =======================================

Refresh(sng_solicitudes);
