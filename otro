//Crear de cero lote
Set(varLoteIDGenerado,Text(Now(), "yyymmdd-hhmm") & "@" & Left(currentUser.userPrincipalName, Find("@", currentUser.userPrincipalName)-1));

//Agrupaciones descargadas con estado Pendiente                                                                                                                                 
ClearCollect(
    colLotesPendientes,
    Filter(sng_Lotes, lote_Estado = "Pendiente")
);

//Solicitudes sin descargar aprobadas por Manager
Set(
    varSolicitudesSinDescargar, 
    CountRows(
        Filter(
            sng_solicitudes, 
            sng_solicitudEstado = AppEstados.AprobadoAprobador1 && IsBlank(sng_loteID)
        )
    )
);


// Validar si hay solicitudes sin lote
If(
    varSolicitudesSinDescargar = 0,

    Notify("No hay solicitudes aprobadas sin lote. No se generó ningún lote.", NotificationType.Warning),

    If(
        CountRows(colLotesPendientes) > 0,
        //Mostrar popup
        Set(varPopUpAlertaLote, true),
        
        /* INICIO BLOQUE REUTILIZABLE */

        //Obtener: Solicitudes sin descargar aprobadas por Manager
        ClearCollect(
            colSolicitudesAprobadasPorManager,
            ShowColumns(
                Filter(
                    sng_solicitudes,
                    sng_solicitudEstado = AppEstados.AprobadoAprobador1
                ),
                sng_solicitudAprobador1Email,
                sng_solicitudAprobador1Nombre,
                sng_solicitudAprobador1ID,
                sng_solicitudBeneficiarioEmail,
                sng_solicitudBeneficiarioNombre,
                sng_solicitudBeneficiarioID,
                sng_solicitudPeticionarioEmail,
                sng_solicitudPeticionarioNombre,
                sng_solicitudPeticionarioID,
                sng_solicitudCosteEstimado,
                sng_solicitudCECO,
                sng_solicitudEntidad,
                sng_solicitudProducto,
                sng_solicitudFecha,
                sng_solicitudFechaFin,
                Solicitudes,
                sng_loteID
            )
        );

        //Marcar: Agrupaciones: Solicitudes sin descargar aprobadas por Manager (Dataverse)
        ForAll(
            colSolicitudesAprobadasPorManager,
            Patch(
                sng_solicitudes,
                {Solicitudes: ThisRecord.cr8bd_solicitudesid},
                {sng_loteID: varLoteIDGenerado & "@" & ThisRecord.cr8bd_sng_aprobador1id}
            )
        );

        //Agrupar: Solicitudes sin descargar aprobadas por Manager
        If(
            !IsEmpty(colSolicitudesAprobadasPorManager),
            ClearCollect(
                colAgruparSolicitudesAprobadasPorManager,
                AddColumns(
                    GroupBy(
                        colSolicitudesAprobadasPorManager,
                        cr8bd_manager,
                        Registros
                    ),
                    CECO, First(Registros).cr8bd_sol_solicitudceco,
                    Entidad, First(Registros).cr8bd_sol_solicitudentidad,
                    ManagerNombre, First(Registros).cr8bd_sng_solicitudaprobador1nombre,
                    ManagerID, First(Registros).cr8bd_sng_aprobador1id,
                    BeneficiariosNombre, Concat(Registros, cr8bd_sol_beneficiario, ","),
                    BeneficiariosID, Concat(Registros, cr8bd_sng_solicitudbeneficiarioid, ","),
                    BeneficiariosEmail, Concat(Registros, cr8bd_sng_solicitudbeneficiarionombre, ","),
                    PeticionariosNombre, Concat(Registros, cr8bd_sng_solicitudpeticionarionombre, ","),
                    PeticionariosID, Concat(Registros, cr8bd_sng_solicitudpeticionarioid, ","),
                    PeticionariosEmail, Concat(Registros, cr8bd_sng_solicitudpeticionarionombre, ","),
                    Producto, First(Registros).cr8bd_producto,
                    Total, Round(Sum(Registros, cr8bd_sng_solicitudcosteestimado),2),
                    Usuarios_en_peticion, Concat(Registros, cr8bd_sol_beneficiario, ","),
                    FechaAgrupacion, Now(),
                    FechasFin, Concat(Registros, Text(cr8bd_sng_solicitudfechafin, "dd/mm/yy"), ","),
                    FechasIni, Concat(Registros, Text(cr8bd_sng_solicitudfecha, "dd/mm/yy"), ","),
                    SolicitudID, Concat(Registros, cr8bd_solicitudesid, ","),
                    ID, varLoteIDGenerado & "@" & First(Registros).cr8bd_sng_aprobador1id
                )
            )
        );

        //Crear: Agrupaciones: Solicitudes sin descargar aprobadas por Manager (Dataverse)
        ForAll(colAgruparSolicitudesAprobadasPorManager, 
            Patch(
                sng_grupos
                Defaults(sng_grupos),
                {
                    grupoID: ID,
                    grupoEstado: "Pendiente",
                    grupoCreadorEmail: currentUser.userPrincipalName,
                    grupoCreadorNombre: currentUser.displayName
                }
            )
        );

        /* FIN BLOQUE REUTILIZABLE */

    );
);
