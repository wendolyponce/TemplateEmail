// ========== Versión y usuario ==========
Set(varVersion, "V1.0.7");
Set(varPopUpAlertaLote, false);
Set(currentUser, Office365Users.MyProfileV2());

// ========== Aprobaciones pendientes para usuario actual ==========
Set(
    varAprobacionesPendientes,
    CountRows(
        Filter(
            sng_solicitudes,
            sng_solicitudAprobador1Email = currentUser.userPrincipalName &&
            sng_solicitudEstado = AppEstados.PendienteAprobador1
        )
    )
);

// ========== Rol del usuario ==========
Set(
    varRolUsuario,
    LookUp(
        sng_usuarios,
        sng_usuarioEmail1 = currentUser.userPrincipalName ||
        sng_usuarioEmail2 = currentUser.userPrincipalName,
        sng_usuarioRol
    )
);
Set(varRolController, varRolUsuario = "Controller");

// ========== Limpiar colecciones ==========
Clear(colSolicitud);
Clear(colResumenManager);

// ========== 1. Buscar el único lote pendiente existente ==========
Set(
    varLotePendiente,
    LookUp(sng_Lotes, lote_Estado = "Pendiente")
);

// ========== 2. Si existe, asignar su ID a varLoteIDGenerado ==========
If(
    !IsBlank(varLotePendiente),
    Set(varLoteIDGenerado, varLotePendiente.lote_LoteID),
    Set(varLoteIDGenerado, Blank())
);

// ========== 3. Si hay un lote pendiente, cargar sus solicitudes ==========
If(
    !IsBlank(varLoteIDGenerado),
    ClearCollect(
        colSolicitud,
        ShowColumns(
            Filter(sng_solicitudes, sng_loteID = varLoteIDGenerado),
            sng_solicitudAprobador1Email,
            sng_solicitudAprobador1Nombre,
            sng_solicitudImporte,
            sng_solicitudBeneficiarioEmail,
            cr8bd_manager,
            cr8bd_sng_solicitudaprobador1nombre,
            cr8bd_sng_solicitudcosteestimado,
            cr8bd_sol_beneficiario
        )
    ),
    Clear(colSolicitud)
);

// ========== 4. Generar resumen por manager si hay solicitudes ==========
If(
    !IsEmpty(colSolicitud),
    ClearCollect(
        colResumenManager,
        AddColumns(
            GroupBy(
                colSolicitud,
                cr8bd_manager,
                Registros
            ),
            NombreManager, First(Registros).cr8bd_sng_solicitudaprobador1nombre,
            Total, Sum(Registros, cr8bd_sng_solicitudcosteestimado),
            Usuarios_en_peticion, Concat(Registros, cr8bd_sol_beneficiario, ";"),
            FechaAgrupacion, Now(),
            ID, varLoteIDGenerado
        )
    )
);

// ========== 5. Métricas: Cantidad de solicitudes con/sin lote ==========
Set(
    varCantidadSinLote,
    CountRows(
        Filter(
            sng_solicitudes,
            sng_solicitudEstado = AppEstados.AprobadoAprobador1 &&
            IsBlank(sng_loteID)
        )
    )
);
Set(
    varCantidadConLote,
    CountRows(
        Filter(
            sng_solicitudes,
            sng_solicitudEstado = AppEstados.AprobadoAprobador1 &&
            !IsBlank(sng_loteID)
        )
    )
);
